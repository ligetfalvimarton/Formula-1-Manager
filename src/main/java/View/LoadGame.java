/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;


import Model.Buildings;
import Model.GameModel;
import Model.HighScore;
import Model.Unit;
import Source.Constructor;
import Source.Images;
import java.awt.Point;
import java.io.IOException;
import java.sql.Array;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Marton
 */
public class LoadGame extends javax.swing.JPanel {

    private final MainWindow window;
    private ArrayList<HighScore> highscores;
    public LoadGame(final MainWindow window) throws SQLException
    {
        this.window = window;
        initComponents();
        highscores = new ArrayList<>();
        loadScores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void loadScores() throws SQLException
    {
        int size = 0;
        if(window.getDatabase().getDatabase().size()>=20)
        {
            size = 20;
        }
        else
        {
            size = window.getDatabase().getDatabase().size();
        }
        for(int i =0;i<size;i++)
        {
            highscores.add(window.getDatabase().getDatabase().get(i));
        }
        
        for(int i=0;i<highscores.size();i++)
        {
            dataTable.setValueAt(highscores.get(i).getName(),i,0);
            dataTable.setValueAt(highscores.get(i).getScore(),i,1);
            dataTable.setValueAt(highscores.get(i).getWins(),i,2);
            dataTable.setValueAt(highscores.get(i).getMoney(),i,3);
            dataTable.setValueAt(highscores.get(i).getConstructor(),i,4);
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        backToMenuButton = new javax.swing.JButton();
        loadGameButton = new javax.swing.JButton();

        infoLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoLabel.setText("Choose which game do you want to load");

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Resume Game");

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Scores", "Wins", "Money", "Constructor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(dataTable);
        if (dataTable.getColumnModel().getColumnCount() > 0) {
            dataTable.getColumnModel().getColumn(0).setResizable(false);
            dataTable.getColumnModel().getColumn(1).setResizable(false);
            dataTable.getColumnModel().getColumn(2).setResizable(false);
            dataTable.getColumnModel().getColumn(4).setResizable(false);
        }

        backToMenuButton.setText("Back");
        backToMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMenuButtonActionPerformed(evt);
            }
        });

        loadGameButton.setText("Load");
        loadGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadGameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backToMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(loadGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backToMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backToMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMenuButtonActionPerformed
        try {
            window.switchToMenu(this);
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_backToMenuButtonActionPerformed

    private void loadGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadGameButtonActionPerformed
        HighScore setToLoad = new HighScore("",0,0,0,"",0,"","");
        for(int i = 0;i<highscores.size();i++)
        {
            int counter = 0;
            for(int j = 0; j<5;j++)
            {
                String a = highscores.get(i).toString().split(" ")[j];
                String b = dataTable.getValueAt(dataTable.getSelectedRow(), j).toString();
                if(a.equals(b))
                    counter++;
            }
            if(counter == 5)
            {
                setToLoad = highscores.get(i);
            }
        }
        String strBoard = setToLoad.getBoard();
        String[] strSplit = strBoard.split(" ");
        for(String s : strSplit)
        {
            Point sas = new Point(Integer.valueOf(s.split(",")[0]),Integer.valueOf(s.split(",")[1]));
            String typeS = s.split(",")[2];
            int sX = Integer.valueOf(s.split(",")[3]);
            int sY = Integer.valueOf(s.split(",")[4]);
            loadOnBoard(sas,typeS,sY,sX);
        }
        if(setToLoad.getValues().length()>3)
        {
            ArrayList<Integer> tmp = new ArrayList<>();
            String[] slti = setToLoad.getValues().substring(1, setToLoad.getValues().length()-1).split(",");
            for (String s : slti)
                tmp.add(Integer.valueOf(s.trim()));
            window.getGameModel().setValues(tmp);
        }
        window.setConstructor(Constructor.valueOf(setToLoad.getConstructor()));
        window.setPlayerName(setToLoad.getName());
        window.switchToGameField(this);
        window.getGameModel().setWins(setToLoad.getWins());
        window.getGameModel().setMoney(setToLoad.getMoney());
        window.getGameModel().setGpCounter(setToLoad.getDay()/3);
        window.getGameModel().getGameField().setValue(setToLoad.getMoney());
        window.getGameModel().getTimeSimulation().setDaysPassed(setToLoad.getDay());
        window.getGameModel().getTimeSimulation().start();    
    }//GEN-LAST:event_loadGameButtonActionPerformed

    public void loadOnBoard(Point point, String type, int sX, int sY)
    {
        Point pp = new Point(24,0);
        if("hq".equals(type))
        {}
        else if((point.equals(pp) && "Track1".equals(type)))
        {}
        else
        {
            ArrayList<Buildings> tmp = window.getGameModel().getAlreadyBuiltList();
            Buildings temp;
            int tempSizeX;
            int tempSizeY;
            temp = new Buildings(0, 0, 0, 0, sX, sY, new Point(0,0), false, type, Images.valueOf(type.toUpperCase()));
            tempSizeX = temp.getSizeX();
            tempSizeY = temp.getSizeY();
            Point p = point;
            temp.setPosition(p);
            if(p.x+tempSizeX <= window.getGameModel().getBoard().length && p.y+tempSizeY <= window.getGameModel().getBoard()[0].length){
                for(int i=p.x; i<p.x+tempSizeX; i++){
                    for(int j=p.y; j<p.y+tempSizeY; j++){
                        window.getGameModel().getBoard()[i][j].setImage(temp.getImage());
                        window.getGameModel().getBoard()[i][j].setPosition(new Point(temp.getPosition()));
                        window.getGameModel().getBoard()[i][j].setType(temp.getType());
                        window.getGameModel().getBoard()[i][j].setUsable(temp.isUsable());
                    }
                }
                tmp.add(temp);
            }
            window.getGameModel().setAlreadyBuiltList(tmp);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToMenuButton;
    private javax.swing.JTable dataTable;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadGameButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
